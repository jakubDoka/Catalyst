use {
    "root/utils"
}

enum Holder {
    Some: Vec[int]
    None: nothing
}

impl Holder {
    fn drop(s: Self, vec: Vec[int]) {

    }
}

enum Enum {
    Something: nothing
    Structural
}

struct Structural {
    integer: int
}

impl Enum {
    fn new_structural() -> Self {
        Self::Structural::{ integer: 0 }
    }

    fn new_structural_as_tuple() -> Self {
        Self::Structural::(0)
    }

    fn is_something(s: Self) -> bool {
        match s {
            Something::() => true
            _ => false
        }
    }

    fn integer(s: Self) -> int {
        match s {
            Structural::(0) => 0
            Structural::{ integer } => integer
            Something::() => 1
        }

        0
    }
}