file "src/state.rs" {
    use "crate"
    use "ast"
    use "incr"

    struct SourceLoader {
        mut Units
        mut Modules
        mut Sources
        mut LoaderContext
        mut Diagnostics
        mut ModuleMap

        Subcommand
    }

    struct MainScopeBuilder {
        mut Diagnostics
        mut Scope
        
        Modules
        BuiltinSource
        Sources
        AstData
        ModuleMap
    }

    struct MainTirBuilder {
        mut Diagnostics
        mut Modules
        mut Funcs
        mut TirData
        mut FuncBodies
        mut Types
        mut TyLists
        mut TyComps
        mut TyCompLookup
        mut FuncLists
        mut Instances
        mut BoundImpls
        mut ScopeContext
        mut TyGraph
        mut AstData
        mut AstTemp
        mut Scope
        mut FuncMeta
        mut ToCompile
        mut TirStack
        mut TirPatternGraph
        mut TyOrder
        mut Reprs
        mut BuiltinSource
        mut ReprFields
        mut FuncInstances
        mut ToLink
        mut Macros

        host_isa: `Box<dyn TargetIsa>`
        Sources
        BuiltinTypes
        ItemLexicon
        Units
        ModuleMap
    }

    struct Generator {
        mut Diagnostics
        mut Funcs
        mut FuncMeta
        mut TyLists
        mut Reprs
        mut Types
        mut ReprFields
        mut TyComps
        mut FuncLists
        mut BoundImpls
        mut CompileResults
        mut Instances
        mut Context
        mut MirBuilderContext
        mut FuncCtx
        mut ToCompile
        mut CirBuilderContext
        mut Signatures
        mut GenerationContext
        mut FuncInstances
        
        passed mut IncrModules
        passed mut IncrFuncs
        passed isa: `dyn TargetIsa`

        BuiltinTypes
        Sources
        FuncBodies
    }

    struct DeadCodeElim {
        Funcs
        CompileResults
    }

    struct Logger {
        mut Diagnostics
        TyLists
        Types
        Sources
        TyComps
        ItemLexicon
        Units
    }
}

file "modules/src/state.rs" {
    use "crate"
    use "module_types"
    use "lexer"
    use "errors"
    
    struct ModuleBuilder {
        mut Sources
        mut Modules
        mut Units
        mut LoaderContext
        mut ModuleMap
        mut Diagnostics
    }

    struct UnitBuilder {
        mut Sources
        mut Units
        mut LoaderContext
        mut Diagnostics
    }
}

file "typec/src/state.rs" {
    use "module_types"
    use "typec_types"
    use "lexer"
    use "errors"
    use "ast"
    use "crate::scope"

    struct BoundVerifier {
        mut ScopeContext
        mut TyLists
        mut Modules
        mut Scope
        mut Diagnostics
        mut Funcs
        mut FuncLists
        mut BoundImpls
        
        AstData
        Types
        BuiltinTypes
        Sources
        FuncMeta
    }

    struct IdentHasher {
        mut Diagnostics
        
        Sources
        AstData
        Scope
        Types
    }

    struct TyParser {
        mut Types
        mut Diagnostics
        mut Scope
        mut TyLists
        mut Instances
        mut BoundImpls
        
        AstData
        TyComps
        Sources
        BuiltinTypes
    }

    struct ScopeBuilder {
        owned Source
        
        mut Scope
        mut Funcs
        mut Types
        mut TyLists
        mut TyComps
        mut TyCompLookup
        mut FuncLists
        mut Instances
        mut BoundImpls
        mut Modules
        mut Diagnostics
        mut ScopeContext
        mut FuncMeta
        mut ToCompile
        mut FuncInstances
        mut Macros
        mut ToLink
        
        BuiltinTypes
        Sources
        AstData
    }

    struct TirBuilder {
        owned Func
        
        mut TyLists
        mut Instances
        mut TyComps
        mut TyCompLookup
        mut BoundImpls
        mut ScopeContext
        mut TirData
        mut Scope
        mut Types
        mut TirStack
        mut Modules
        mut Diagnostics
        mut FuncMeta
        mut TirPatternGraph
        
        Funcs
        FuncLists
        BuiltinTypes
        Sources
        AstData
    }

    struct TyBuilder {
        owned Ty
        
        mut Scope
        mut Types
        mut TyLists
        mut TyComps
        mut TyCompLookup
        mut Instances
        mut BoundImpls
        mut ScopeContext
        mut TyGraph
        mut Modules
        mut Diagnostics
        
        BuiltinTypes
        Sources
        AstData
    }
}

file "instance/src/state.rs" {
    use "crate"
    use "typec_types"
    use "lexer"
    use "instance_types"
    use "errors"
    use "cranelift_codegen::ir"
    use "cranelift_codegen::isa"
    
    struct MirBuilder {
        owned Func
        owned ptr_ty: Type
        owned system_call_convention: CallConv
        
        passed TirData

        mut Funcs
        mut FuncCtx
        mut Diagnostics
        mut MirBuilderContext
        mut ToCompile
        mut FuncInstances
        
        Reprs
        Types
        TyLists
        FuncLists
        TyComps
        BoundImpls
        ReprFields
        BuiltinTypes
        Sources
        FuncMeta
        
        owned return_dest: `Option<mir::Value>` = "None"
    }

    struct ReprInstancing {
        mut Types
        mut TyLists
        mut Instances
        mut ReprFields
        mut Reprs
        
        Sources
        TyComps
        
        owned ptr_ty: Type
    }

    struct LayoutBuilder {
        mut ReprFields
        mut Reprs
        
        Types
        Sources
        TyComps
        Instances
        TyLists
    }
}

file "gen/src/state.rs" {
    use "crate"
    use "typec_types"
    use "instance_types"

    struct CirBuilder {
        owned builder: `FunctionBuilder<'a>`
        
        mut CirBuilderContext
        mut Signatures
        
        passed isa: `dyn TargetIsa`
        
        Funcs
        Reprs
        Types
        BuiltinTypes
        TyLists
        FuncCtx
        Sources
        FuncMeta
    }
}