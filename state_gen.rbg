file "types/parsing-t/src/state_gen.rs" {
    use "crate";
    use "storage";

    struct AstDisplay {
        ast: `VRef<Ast>`
        AstData
        str
    }
}

file "stages/packaging/src/state_gen.rs" {
    use "packaging_t"
    use "diags"
    use "storage"

    struct PackageLoader {
        mut Packages
        mut Workspace
        mut Interner
        mut PackageGraph
    }
}

file "types/typec-t/src/state_gen.rs" {
    use "crate";
    use "storage";
    use "packaging_t"

    struct TyFactory {
        mut Typec
        mut Interner
    }

    struct BoundChecker {
        mut Typec
        mut Interner
    }

    struct BuiltinBuilder {
        mut Typec
        mut Interner
    }

    struct TirDisplay {
        owned Ident
        owned root: `Maybe<TirList>`
        
        passed name: str
        passed tir_data: TirData
        
        Interner
        Typec
        Packages
    }
}

file "stages/type-checking/src/state_gen.rs" {
    use "storage"
    use "diags"
    use "scope"
    use "type_checking_t"
    use "parsing_t"
    use "packaging_t"

    struct FuncParser {
        owned current_file: Ident
        owned TirData = "TirData::default()"

        mut Interner
        mut Scope
        mut Typec
        mut Workspace
        mut Packages
        mut FuncParserCtx

        AstData
    }

    struct ItemCollector {
        owned current_file: Ident

        mut Interner
        mut Scope
        mut Typec
        mut Workspace
        mut Packages

        AstData
    }

    struct TyBuilder {
        owned current_file: Ident

        mut Interner
        mut Scope
        mut Typec
        mut Workspace
        mut Packages

        AstData
    }

    struct TyParser {
        owned current_file: Ident

        mut Interner
        mut Scope
        mut Typec
        mut Workspace
        mut Packages

        AstData
    }
}