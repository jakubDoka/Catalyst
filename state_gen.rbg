file "src/state.rs" {
    use "crate"
    use "ast"
    use "incr"
    use "storage"

    struct SourceLoader {
        mut Units
        mut Modules
        mut Sources
        mut LoaderContext
        mut Diagnostics
        mut ModuleMap
        VecPool

        Subcommand
    }

    struct MainScopeBuilder {
        mut Diagnostics
        mut Scope
        mut TyGraph

        VecPool
        Modules
        BuiltinSource
        Sources
        AstData
        ModuleMap
    }

    struct MainTirBuilder {
        mut Diagnostics
        mut Modules
        mut Funcs
        mut TirData
        mut Types
        mut TyLists
        mut TyComps
        mut FuncLists
        mut TyInstances
        mut BoundImpls
        mut ScopeContext
        mut TyGraph
        mut AstData
        mut AstTemp
        mut Scope
        mut ToCompile
        mut TirStack
        mut TirPatternGraph
        mut TyOrder
        mut Reprs
        mut BuiltinSource
        mut ReprFields
        mut FuncInstances
        mut ToLink
        mut Macros
        mut Globals
        mut GlobalMap
        mut GlobalData
        mut Initializers
        mut o_ctx: OwnershipContext
        VecPool

        host_isa: `Box<dyn TargetIsa>`
        Sources
        BuiltinTypes
        Units
        ModuleMap
    }

    struct Generator {
        mut Diagnostics
        mut Funcs
        mut TyLists
        mut Reprs
        mut Types
        mut ReprFields
        mut TyComps
        mut FuncLists
        mut BoundImpls
        mut CompileResults
        mut TyInstances
        mut Context
        mut MirBuilderContext
        mut FuncCtx
        mut ToCompile
        mut CirBuilderContext
        mut Signatures
        mut GenerationContext
        mut FuncInstances
        mut GlobalMap
        mut TyGraph

        passed mut IncrModules
        passed mut IncrFuncs
        passed isa: `dyn TargetIsa`

        VecPool
        Globals
        BuiltinTypes
        Sources
        Modules
    }

    struct DeadCodeElim {
        Funcs
        CompileResults
    }

    struct Logger {
        Diagnostics
        TyLists
        Types
        Sources
        TyComps
        Units
    }
}

file "modules/src/state.rs" {
    use "crate"
    use "module_types"
    use "lexer"
    use "errors"
    
    struct ModuleBuilder {
        mut Sources
        mut Modules
        mut Units
        mut LoaderContext
        mut ModuleMap
        mut Diagnostics
    }

    struct UnitBuilder {
        mut Sources
        mut Units
        mut LoaderContext
        mut Diagnostics
    }
}

file "typec_types/src/state.rs" {
    use "crate"
    use "lexer"
    use "errors"
    use "storage"

    struct TyFactory {
        mut Types
        mut TyLists
        mut TyInstances
        mut BoundImpls
        mut TyGraph

        VecPool
        TyComps
        Sources
        BuiltinTypes
    }

    struct BoundChecker {
        mut BoundImpls
        mut Diagnostics
        mut Types
        
        VecPool
        TyLists
        BuiltinTypes
        TyComps
        Sources
    }

    struct TyDisplay {
        owned Ty
        
        TyLists
        TyComps
        Types
        Sources
    }

    struct SigDisplay {
        owned Sig

        TyLists
        TyComps
        Types
        Sources
    }

    struct MissingBoundTreeDisplay {
        passed MissingBoundTree

        TyLists
        TyComps
        Types
        Sources
    }
}

file "typec/src/state.rs" {
    use "module_types"
    use "typec_types"
    use "lexer"
    use "errors"
    use "ast"
    use "storage"

    struct BoundVerifier {
        mut ScopeContext
        mut TyLists
        mut Modules
        mut Scope
        mut Diagnostics
        mut Funcs
        mut FuncLists
        mut BoundImpls
        mut Types
        
        TyComps
        VecPool
        AstData
        BuiltinTypes
        Sources
    }

    struct IdentHasher {
        mut Diagnostics
        
        Sources
        AstData
        Scope
        Types
    }

    struct TyParser {
        mut Types
        mut Diagnostics
        mut Scope
        mut TyLists
        mut TyInstances
        mut BoundImpls
        mut TyComps
        mut TyGraph
        
        VecPool
        AstData
        Sources
        BuiltinTypes
    }

    struct ScopeBuilder {
        owned Source
        
        mut Scope
        mut Funcs
        mut Types
        mut TyLists
        mut TyComps
        mut FuncLists
        mut TyInstances
        mut BoundImpls
        mut Modules
        mut Diagnostics
        mut ScopeContext
        mut ToCompile
        mut FuncInstances
        mut Macros
        mut ToLink
        mut Globals
        mut Initializers
        mut TyGraph

        VecPool
        BuiltinTypes
        Sources
        AstData
    }

    struct TirBuilder {
        owned Func = "Func::reserved_value()"
        owned Global = "Global::reserved_value()"
        
        mut TyLists
        mut TyInstances
        mut TyComps
        mut BoundImpls
        mut ScopeContext
        mut TirData
        mut Scope
        mut Types
        mut TirStack
        mut Modules
        mut Diagnostics
        mut TirPatternGraph
        mut Globals
        mut GlobalMap
        mut GlobalData
        mut Funcs
        mut TyGraph
        mut FuncInstances

        VecPool
        FuncLists
        BuiltinTypes
        Sources
        AstData
    }

    struct TyBuilder {
        owned Ty
        
        mut Scope
        mut Types
        mut TyLists
        mut TyComps
        mut TyInstances
        mut BoundImpls
        mut ScopeContext
        mut TyGraph
        mut Modules
        mut Diagnostics

        VecPool
        BuiltinTypes
        Sources
        AstData
    }

    struct BuiltinBuilder {
        mut BuiltinSource
        mut Sources
        mut Types
        mut TyLists
        mut TyInstances
        mut Funcs
        mut FuncLists
        mut TyComps
        mut BoundImpls
        mut TyGraph

        VecPool
        BuiltinTypes
    }
}

file "instance_types/src/state.rs" {
    use "crate"
    use "typec_types"
    use "lexer"

    struct MirDisplay {
        passed FuncCtx
        
        TyComps
        Types
        TyLists
        Sources
    }
}

file "instance/src/state.rs" {
    use "crate"
    use "typec_types"
    use "lexer"
    use "instance_types"
    use "errors"
    use "cranelift_codegen::ir"
    use "cranelift_codegen::isa"
    use "storage"
    
    struct MirBuilder {
        owned Func
        owned ptr_ty: Type
        owned system_call_convention: CallConv
        
        passed TirData

        mut Funcs
        mut FuncCtx
        mut Diagnostics
        mut MirBuilderContext
        mut ToCompile
        mut FuncInstances
        mut Types
        mut TyInstances
        mut BoundImpls
        mut TyLists
        mut Reprs
        mut TyGraph
        
        VecPool

        FuncLists
        TyComps
        ReprFields
        BuiltinTypes
        Sources
        
        owned return_dest: `Option<mir::Value>` = "None"
    }

    struct ReprInstancing {
        owned ptr_ty: Type
        
        mut Types
        mut TyLists
        mut TyInstances
        mut ReprFields
        mut Reprs
        mut BoundImpls
        mut TyGraph

        VecPool
        Sources
        TyComps
        BuiltinTypes
    }

    struct LayoutBuilder {
        mut ReprFields
        mut Reprs
        
        VecPool
        BuiltinTypes
        Types
        Sources
        TyComps
        TyInstances
        TyLists
    }
}

file "gen/src/state.rs" {
    use "crate"
    use "typec_types"
    use "instance_types"
    use "storage"

    struct CirBuilder {
        owned builder: `FunctionBuilder<'a>`
        
        mut CirBuilderContext
        mut Signatures
        VecPool

        passed isa: `dyn TargetIsa`
        
        TyComps
        Funcs
        Reprs
        Types
        BuiltinTypes
        TyLists
        FuncCtx
        Sources
    }
}

file "ownership/src/state.rs" {
    use "crate"
    use "lexer"
    use "typec_types"
    use "errors"
    use "storage"

    struct OwnershipSolver {
        mut o_ctx: OwnershipContext
        mut Diagnostics
        mut BoundImpls
        mut Types
        VecPool

        TirData
        Funcs
        TyComps
        TyLists
        Sources
        BuiltinTypes
    }

    struct DropSolver {
        mut o_ctx: OwnershipContext
        mut TirData
        mut ScopeContext
        mut BoundImpls
        mut Types
        mut TyLists
        mut TyInstances
        mut TyGraph

        VecPool
        BuiltinTypes
        Sources
        Funcs
        TyComps
    }
}