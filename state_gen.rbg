file "stages/packaging/src/state_gen.rs" {
    use "packaging_t"
    use "diags"
    use "storage"

    struct PackageLoader {
        mut Packages
        mut Workspace
        mut Interner
        mut PackageGraph        
    }
}

file "utils/typec-shared/src/state_gen.rs" {
    use "typec_t";
    use "storage";

    struct TyUtils {
        mut Typec
        mut Interner
    }

    struct BoundUtils {
        mut Typec
        mut Interner
    }

    struct BuiltinUtils {
        mut Typec
        mut Interner
    }
}

file "stages/typec/src/state_gen.rs" {
    use "storage"
    use "diags"
    use "scope"
    use "typec_t"
    use "packaging_t"

    struct TyChecker {
        owned current_file: `VRef<str>`

        mut Interner
        mut Scope
        mut Typec
        mut Workspace
        mut Packages
    }
}

file "stages/mir/src/state_gen.rs" {
    use "storage"
    use "diags"
    use "typec_t"
    use "packaging_t"


    struct MirChecker {
        owned current_file: `VRef<str>`

        mut Interner
        mut Typec
        mut Workspace
        mut Packages
    }
}

file "stages/gen/src/state_gen.rs" {
    use "crate"
    use "storage"
    use "typec_t"
    use "packaging_t"
    use "cranelift_codegen::isa"


    struct Generator {
        passed isa: `dyn TargetIsa`
        passed mut ctx: `GeneratorCtx`

        mut Interner
        Typec
        Packages
    }
}