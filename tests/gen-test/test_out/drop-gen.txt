info: generated ir:
native-x86_64-unknown-linux-gnu4\main[] function u0:0() -> i64 uext fast {
    sig0 = () fast
    sig1 = () fast
    sig2 = () fast
    sig3 = () fast
    sig4 = () fast
    sig5 = () fast
    fn0 = colocated u0:58 sig0
    fn1 = colocated u0:59 sig1
    fn2 = colocated u0:60 sig2
    fn3 = colocated u0:61 sig3
    fn4 = colocated u0:62 sig4
    fn5 = colocated u0:63 sig5

block0:
    call fn0()
    call fn1()
    call fn2()
    call fn3()
    call fn4()
    call fn5()
    v0 = iconst.i64 0
    return v0  ; v0 = 0
}
native-x86_64-unknown-linux-gnu4\drop_cond[] function u0:0() fast {
    ss0 = explicit_slot 8
    sig0 = (i32) -> i32 fast
    sig1 = (i64) fast
    sig2 = (i32) fast
    fn0 = colocated u0:65 sig0
    fn1 = colocated u0:64 sig1
    fn2 = colocated u0:66 sig2

block0:
    v0 = iconst.i32 103
    v1 = call fn0(v0)  ; v0 = 103
    v3 -> v1
    v5 -> v1
    v2 = iconst.i8 1
    brif v2, block1, block2  ; v2 = 1

block2:
    jump block3

block3:
    stack_store.i32 v3, ss0
    v4 = stack_addr.i64 ss0
    call fn1(v4)
    jump block4

block1:
    call fn2(v5)
    jump block4

block4:
    return
}
native-x86_64-unknown-linux-gnu4\drop[4\A] function u0:0(i32) fast {
    ss0 = explicit_slot 8
    sig0 = (i64) fast
    fn0 = colocated u0:64 sig0

block0(v0: i32):
    stack_store v0, ss0
    v1 = stack_addr.i64 ss0
    call fn0(v1)
    return
}
native-x86_64-unknown-linux-gnu4\4\A\new[] function u0:0(i32) -> i32 fast {
block0(v0: i32):
    v1 = iconst.i32 0
    return v0
}
native-x86_64-unknown-linux-gnu4\4\A\drop[] function u0:0(i64) fast {
    sig0 = (i32) -> i32 uext fast
    fn0 = u0:67 sig0

block0(v0: i64):
    v1 = load.i32 v0
    v2 = call fn0(v1)
    v3 = iconst.i32 32
    v4 = call fn0(v3)  ; v3 = 32
    return
}
native-x86_64-unknown-linux-gnu4\move_in_drop[] function u0:0() fast {
    ss0 = explicit_slot 8
    ss1 = explicit_slot 8
    sig0 = (i32) -> i32 fast
    sig1 = (i64) fast
    fn0 = colocated u0:65 sig0
    fn1 = colocated u0:64 sig1

block0:
    v0 = iconst.i32 101
    v1 = call fn0(v0)  ; v0 = 101
    stack_store v1, ss0
    v2 = stack_addr.i64 ss0
    call fn1(v2)
    v3 = iconst.i32 102
    v4 = call fn0(v3)  ; v3 = 102
    stack_store v4, ss1
    v5 = stack_addr.i64 ss1
    call fn1(v5)
    return
}
native-x86_64-unknown-linux-gnu4\drop_refed_variable[] function u0:0() fast {
    ss0 = explicit_slot 8
    sig0 = (i32) -> i32 fast
    sig1 = (i64, i32) fast
    sig2 = (i64) fast
    fn0 = colocated u0:65 sig0
    fn1 = colocated u0:68 sig1
    fn2 = colocated u0:64 sig2

block0:
    v0 = iconst.i32 97
    v1 = call fn0(v0)  ; v0 = 97
    stack_store v1, ss0
    v2 = stack_addr.i64 ss0
    v3 = iconst.i32 100
    call fn1(v2, v3)  ; v3 = 100
    v4 = stack_addr.i64 ss0
    call fn2(v4)
    return
}
native-x86_64-unknown-linux-gnu4\4\A\set_char[] function u0:0(i64, i32) fast {
block0(v0: i64, v1: i32):
    store v1, v0
    return
}
native-x86_64-unknown-linux-gnu4\drop_variable[] function u0:0() fast {
    ss0 = explicit_slot 8
    sig0 = (i32) -> i32 fast
    sig1 = (i64, i32) fast
    sig2 = (i64) fast
    fn0 = colocated u0:65 sig0
    fn1 = colocated u0:68 sig1
    fn2 = colocated u0:64 sig2

block0:
    v0 = iconst.i32 97
    v1 = call fn0(v0)  ; v0 = 97
    stack_store v1, ss0
    v2 = stack_addr.i64 ss0
    v3 = iconst.i32 99
    call fn1(v2, v3)  ; v3 = 99
    v4 = stack_addr.i64 ss0
    call fn2(v4)
    return
}
native-x86_64-unknown-linux-gnu4\drop_referenced[] function u0:0() fast {
    ss0 = explicit_slot 8
    sig0 = (i32) -> i32 fast
    sig1 = (i64, i32) fast
    sig2 = (i64) fast
    fn0 = colocated u0:65 sig0
    fn1 = colocated u0:68 sig1
    fn2 = colocated u0:64 sig2

block0:
    v0 = iconst.i32 97
    v1 = call fn0(v0)  ; v0 = 97
    stack_store v1, ss0
    v2 = stack_addr.i64 ss0
    v3 = iconst.i32 98
    call fn1(v2, v3)  ; v3 = 98
    v4 = stack_addr.i64 ss0
    call fn2(v4)
    return
}
native-x86_64-unknown-linux-gnu4\drop_unused[] function u0:0() fast {
    ss0 = explicit_slot 8
    sig0 = (i32) -> i32 fast
    sig1 = (i64) fast
    fn0 = colocated u0:65 sig0
    fn1 = colocated u0:64 sig1

block0:
    v0 = iconst.i32 97
    v1 = call fn0(v0)  ; v0 = 97
    stack_store v1, ss0
    v2 = stack_addr.i64 ss0
    call fn1(v2)
    return
}


info: status: exit status: 0
 = info: stdout: a b c d e f g 
 = info: stderr: 

