info: generated ir:
function u0:0() -> i64 fast {
    ss0 = explicit_slot 32
    ss1 = explicit_slot 24

block0:
    v0 = iconst.i8 1
    stack_store v0, ss0  ; v0 = 1
    v1 = iconst.i8 1
    stack_store v1, ss0+8  ; v1 = 1
    v2 = iconst.i8 1
    stack_store v2, ss0+16  ; v2 = 1
    v3 = iconst.i64 0
    stack_store v3, ss0+24  ; v3 = 0
    v4 = iconst.i8 1
    v5 = stack_load.i8 ss0
    v6 = icmp eq v4, v5  ; v4 = 1
    v7 = iconst.i8 0
    v8 = stack_load.i8 ss0+8
    v9 = icmp eq v7, v8  ; v7 = 0
    v10 = band v9, v6
    brnz v10, block1
    jump block2

block2:
    v11 = iconst.i8 1
    v12 = stack_load.i8 ss0
    v13 = icmp eq v11, v12  ; v11 = 1
    v14 = iconst.i8 1
    v15 = stack_load.i8 ss0+8
    v16 = icmp eq v14, v15  ; v14 = 1
    v17 = iconst.i8 0
    v18 = stack_load.i8 ss0+16
    v19 = icmp eq v17, v18  ; v17 = 0
    v20 = band v19, v16
    v21 = band v20, v13
    brnz v21, block3
    jump block4

block4:
    v22 = iconst.i8 0
    v23 = stack_load.i8 ss0
    v24 = icmp eq v22, v23  ; v22 = 0
    brnz v24, block5
    jump block6

block6:
    v25 = stack_addr.i64 ss1
    v26 = stack_addr.i64 ss0+8
    v27 = load.i64 aligned v26
    v28 = load.i64 aligned v26+8
    v29 = load.i64 aligned v26+16
    store aligned v27, v25
    store aligned v28, v25+8
    store aligned v29, v25+16
    v30 = iconst.i8 1
    v31 = stack_load.i8 ss1
    v32 = icmp eq v30, v31  ; v30 = 1
    v33 = iconst.i8 1
    v34 = stack_load.i8 ss1+8
    v35 = icmp eq v33, v34  ; v33 = 1
    v36 = band v35, v32
    brnz v36, block7
    jump block8

block8:
    v37 = iconst.i8 1
    v38 = stack_load.i8 ss1
    v39 = icmp eq v37, v38  ; v37 = 1
    v40 = iconst.i8 0
    v41 = stack_load.i8 ss1+8
    v42 = icmp eq v40, v41  ; v40 = 0
    v43 = band v42, v39
    brnz v43, block9
    jump block10

block10:
    v44 = iconst.i64 1
    jump block11(v44)  ; v44 = 1

block9:
    v45 = iconst.i64 6
    jump block11(v45)  ; v45 = 6

block7:
    v46 = stack_load.i64 ss1+16
    jump block11(v46)

block11(v47: i64):
    jump block12(v47)

block5:
    v48 = iconst.i64 3
    return v48  ; v48 = 3

block3:
    v49 = iconst.i64 2
    jump block12(v49)  ; v49 = 2

block1:
    v50 = iconst.i64 5
    jump block12(v50)  ; v50 = 5

block12(v51: i64):
    return v51
}


info: status: 0
 = info: stdout:
 = info: stderr:

