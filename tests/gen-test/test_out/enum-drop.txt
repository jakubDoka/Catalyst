info: generated ir:
main function u0:0() -> i64 fast {
    ss0 = explicit_slot 12
    ss1 = explicit_slot 12
    ss2 = explicit_slot 12
    sig0 = (i64) fast
    fn0 = colocated u0:1 sig0

block0:
    v0 = iconst.i8 0
    stack_store v0, ss0  ; v0 = 0
    v1 = iconst.i32 97
    stack_store v1, ss0+4  ; v1 = 97
    v2 = stack_addr.i64 ss0
    v3 = load.i8 notrap aligned v2
    v4 = icmp_imm eq v3, 0
    brnz v4, block3
    jump block2

block3:
    v5 = iadd_imm.i64 v2, 4
    call fn0(v5)
    jump block1

block2:
    v6 = icmp_imm.i8 eq v3, 1
    brnz v6, block4
    jump block1

block4:
    v7 = iadd_imm.i64 v2, 4
    call fn0(v7)
    v8 = iadd_imm.i64 v2, 8
    call fn0(v8)
    jump block1

block1:
    v9 = iconst.i8 1
    stack_store v9, ss1  ; v9 = 1
    v10 = iconst.i32 98
    stack_store v10, ss1+4  ; v10 = 98
    v11 = iconst.i32 99
    stack_store v11, ss1+8  ; v11 = 99
    v12 = stack_addr.i64 ss1
    v13 = load.i8 notrap aligned v12
    v14 = icmp_imm eq v13, 0
    brnz v14, block7
    jump block6

block7:
    v15 = iadd_imm.i64 v12, 4
    call fn0(v15)
    jump block5

block6:
    v16 = icmp_imm.i8 eq v13, 1
    brnz v16, block8
    jump block5

block8:
    v17 = iadd_imm.i64 v12, 4
    call fn0(v17)
    v18 = iadd_imm.i64 v12, 8
    call fn0(v18)
    jump block5

block5:
    v19 = iconst.i8 2
    stack_store v19, ss2  ; v19 = 2
    v20 = stack_addr.i64 ss2
    v21 = load.i8 notrap aligned v20
    v22 = icmp_imm eq v21, 0
    brnz v22, block11
    jump block10

block11:
    v23 = iadd_imm.i64 v20, 4
    call fn0(v23)
    jump block9

block10:
    v24 = icmp_imm.i8 eq v21, 1
    brnz v24, block12
    jump block9

block12:
    v25 = iadd_imm.i64 v20, 4
    call fn0(v25)
    v26 = iadd_imm.i64 v20, 8
    call fn0(v26)
    jump block9

block9:
    v27 = iconst.i64 0
    return v27  ; v27 = 0
}
drop function u0:0(i64) fast {
    sig0 = (i32) -> i32 windows_fastcall
    fn0 = u0:2 sig0

block0(v0: i64):
    v1 = load.i32 v0
    v2 = call fn0(v1)
    v3 = iconst.i32 32
    v4 = call fn0(v3)  ; v3 = 32
    return
}


info: status: 0
 = info: stdout:
         a b c 
 = info: stderr:

