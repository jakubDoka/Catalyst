info: generated ir:
main function u0:0() -> i64 fast {
    sig0 = (i64) -> i64 fast
    fn0 = colocated u16786432:1480 sig0

block0:
    v0 = iconst.i64 10
    v1 = call fn0(v0)  ; v0 = 10
    v2 = iconst.i64 55
    v3 = isub v1, v2  ; v2 = 55
    return v3
}
fib function u0:0(i64) -> i64 fast {
    sig0 = (i64) -> i64 fast
    fn0 = colocated u16786432:1480 sig0

block0(v0: i64):
    v1 = iconst.i64 0
    v2 = icmp eq v1, v0  ; v1 = 0
    brnz v2, block1
    jump block2

block2:
    v3 = iconst.i64 1
    v4 = icmp eq v3, v0  ; v3 = 1
    brnz v4, block3
    jump block4

block4:
    v5 = iconst.i64 1
    v6 = isub.i64 v0, v5  ; v5 = 1
    v7 = call fn0(v6)
    v8 = iconst.i64 2
    v9 = isub.i64 v0, v8  ; v8 = 2
    v10 = call fn0(v9)
    v11 = iadd v7, v10
    jump block5(v11)

block3:
    v12 = iconst.i64 1
    jump block5(v12)  ; v12 = 1

block1:
    v13 = iconst.i64 0
    jump block5(v13)  ; v13 = 0

block5(v14: i64):
    return v14
}


info: status: exit status: 0
 = info: stdout: 
 = info: stderr: 

