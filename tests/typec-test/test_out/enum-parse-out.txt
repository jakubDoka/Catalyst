error: expected 'struct' | 'fn' | 'spec' | 'impl' | '#' but got 'enum'
 --> enum\root.ctl:1:1
  |
1 | enum [T] Option { Some : T ; None ; } ; fn main() -> uint => match Option \ Some(0) { \ Some(0) => 0 ; \ Some(1) => 1 ; \ Some(_) => 2 ; \ None => 3 ; }
  | ^^^^ token located here
  |
  = info: list -> item

error: expected ',' | '\n' | ';' but got '('
 --> enum\root.ctl:1:93
  |
1 | enum [T] Option { Some : T ; None ; } ; fn main() -> uint => match Option \ Some(0) { \ Some(0) => 0 ; \ Some(1) => 1 ; \ Some(_) => 2 ; \ None => 3 ; }
  |                                                                                             ^ token located here
  |
  = info: list -> item -> function definition -> function body -> expr -> unit expr -> match expr -> list -> match arm -> pattern -> struct ctor pattern -> list

error: expected Ident | '..' but got '\'
 --> enum\root.ctl:1:104
  |
1 | enum [T] Option { Some : T ; None ; } ; fn main() -> uint => match Option \ Some(0) { \ Some(0) => 0 ; \ Some(1) => 1 ; \ Some(_) => 2 ; \ None => 3 ; }
  |                                                                                                        ^ token located here
  |
  = info: list -> item -> function definition -> function body -> expr -> unit expr -> match expr -> list -> match arm -> pattern -> struct ctor pattern -> list -> struct ctor pattern field

error: expected Ident | '..' but got '\'
 --> enum\root.ctl:1:121
  |
1 | enum [T] Option { Some : T ; None ; } ; fn main() -> uint => match Option \ Some(0) { \ Some(0) => 0 ; \ Some(1) => 1 ; \ Some(_) => 2 ; \ None => 3 ; }
  |                                                                                                                         ^ token located here
  |
  = info: list -> item -> function definition -> function body -> expr -> unit expr -> match expr -> list -> match arm -> pattern -> struct ctor pattern -> list -> struct ctor pattern field

error: expected Ident | '..' but got '\'
 --> enum\root.ctl:1:138
  |
1 | enum [T] Option { Some : T ; None ; } ; fn main() -> uint => match Option \ Some(0) { \ Some(0) => 0 ; \ Some(1) => 1 ; \ Some(_) => 2 ; \ None => 3 ; }
  |                                                                                                                                          ^ token located here
  |
  = info: list -> item -> function definition -> function body -> expr -> unit expr -> match expr -> list -> match arm -> pattern -> struct ctor pattern -> list -> struct ctor pattern field

error: expected '=>' but got <eof>
 --> enum\root.ctl:1:153
  |
1 | enum [T] Option { Some : T ; None ; } ; fn main() -> uint => match Option \ Some(0) { \ Some(0) => 0 ; \ Some(1) => 1 ; \ Some(_) => 2 ; \ None => 3 ; }
  |                                                                                                                                                          token located here
  |
  = info: list -> item -> function definition -> function body -> expr -> unit expr -> match expr -> list -> match arm

error: expected '\n' | ';' | '}' but got <eof>
 --> enum\root.ctl:1:153
  |
1 | enum [T] Option { Some : T ; None ; } ; fn main() -> uint => match Option \ Some(0) { \ Some(0) => 0 ; \ Some(1) => 1 ; \ Some(_) => 2 ; \ None => 3 ; }
  |                                                                                                                                                          token located here
  |
  = info: list -> item -> function definition -> function body -> expr -> unit expr -> match expr -> list

