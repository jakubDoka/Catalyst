error: expected Ident | '\' | 'return' | Int | Char | Bool | 'match' | 'if' | 'loop' | 'break' | 'continue' | 'let' | Operator but got '{'
 --> loop-drops\root.ctl:1:73
  |
1 | fn [T] drop(t : T) {} ; struct A ; fn loop_drop() { let a = A\{} ; loop { drop(a) ; } ; } ; fn loop_break_drop() { let a = A\{} ; loop { drop(a) ; break ; } ; } ; fn loop_branch_drop() {     let a = A\{} ; loop { if true => drop(a) ; else => continue ; break ; }     ; } ;
  |                                                                         ^ token located here
  |
  = info: list -> item -> function definition -> function body -> list -> expr -> unit expr -> loop -> expr -> unit expr

error: expected Ident | '\' | 'return' | Int | Char | Bool | 'match' | 'if' | 'loop' | 'break' | 'continue' | 'let' | Operator but got '{'
 --> loop-drops\root.ctl:1:136
  |
1 | fn [T] drop(t : T) {} ; struct A ; fn loop_drop() { let a = A\{} ; loop { drop(a) ; } ; } ; fn loop_break_drop() { let a = A\{} ; loop { drop(a) ; break ; } ; } ; fn loop_branch_drop() {     let a = A\{} ; loop { if true => drop(a) ; else => continue ; break ; }     ; } ;
  |                                                                                                                                        ^ token located here
  |
  = info: list -> item -> function definition -> function body -> list -> expr -> unit expr -> loop -> expr -> unit expr

error: expected Ident | '\' | 'return' | Int | Char | Bool | 'match' | 'if' | 'loop' | 'break' | 'continue' | 'let' | Operator but got '{'
 --> loop-drops\root.ctl:1:212
  |
1 | fn [T] drop(t : T) {} ; struct A ; fn loop_drop() { let a = A\{} ; loop { drop(a) ; } ; } ; fn loop_break_drop() { let a = A\{} ; loop { drop(a) ; break ; } ; } ; fn loop_branch_drop() {     let a = A\{} ; loop { if true => drop(a) ; else => continue ; break ; }     ; } ;
  |                                                                                                                                                                                                                    ^ token located here
  |
  = info: list -> item -> function definition -> function body -> list -> expr -> unit expr -> loop -> expr -> unit expr

