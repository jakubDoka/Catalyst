error: cannot take pointer of temporary value
 --> auto-ref-deref\root.ctl:6:20
  |
6 | fn main -> uint => 0.reference().dereference()
  |                    ^ this value
  |
  = help: storing value in variable should help

error: cannot take pointer of temporary value
 --> auto-ref-deref\root.ctl:6:20
  |
6 | fn main -> uint => 0.reference().dereference()
  |                    ^ this value
  |
  = help: storing value in variable should help

info: mir repr of functions:
 fn [] main() -> uint  { ret var2
    block0() {
        var8 = 0
        var7 = &var8
        var6 = &var7
        var5 = reference(val6)
        var4 = *var5
        var3 = *var4
        var2 = dereference(val3)
        return var2
    }

}

fn [] reference(var0: ^^uint) -> ^^uint  { ret var3
    block0(var2: ^^uint) {
        var3 = access var2
        return var3
    }

}

fn [] dereference(var0: uint) -> uint  { ret var3
    block0(var2: uint) {
        var3 = access var2
        return var3
    }

}



