info: mir repr of functions:
 fn [] main() -> uint  {
    block0() {
        var5 ={var3, var4}
        var3 = 0
        var4 = 1
        var6 = var5.0
        var7 = 0
        var8 = uint == uint(val7, val7)
        var9 = var5.1
        var10 = 1
        var11 = uint == uint(val10, val10)
        var12 = bool & bool(val11, val8)
        split var12 block1 block2
    }

    block1() {
        var2 = 0
        goto block3 with var2
    }

    block2() {
        var13 = var5.0
        var14 = 1
        var15 = uint == uint(val14, val14)
        var16 = var5.1
        var17 = 0
        var18 = uint == uint(val17, val17)
        var19 = bool & bool(val18, val15)
        split var19 block4 block5
    }

    block3(var2: uint) {
        return var2
    }

    block4() {
        var2 = 1
        goto block3 with var2
    }

    block5() {
        var20 = var5.1
        var21 = 0
        var22 = uint == uint(val21, val21)
        split var22 block6 block7
    }

    block6() {
        var23 = var5.0
        var2 = access var23
        goto block3 with var2
    }

    block7() {
        var24 = var5.0
        var25 = var5.1
        var26 = access var24
        var27 = access var25
        var2 = uint + uint(val26, val27)
        goto block3 with var2
    }

}



